services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://dreamuser:dreampass@postgres:5432/dreamdb?sslmode=disable
      - KAFKA_BROKER=kafka:9092
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=dreamuser
      - KAFKA_TOPIC=user-processes
      - POSTGRES_PASSWORD=dreampass
      - POSTGRES_DB=dreamdb
      - POSTGRES_PORT=5432
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_DIRS: /tmp/kafka-logs
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_CLUSTER_ID: "qj9FOv_nSG-ByZvlxnCdKw"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - kafka_data:/var/lib/kafka/data

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: dreamuser
      POSTGRES_PASSWORD: dreampass
      POSTGRES_DB: dreamdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  topic-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ "sh", "-c", "sleep 10 && kafka-topics --create --topic user-processes --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --if-not-exists" ]

networks:
  app-network:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  pgdata:
    driver: local 